install.packages("plotly")
library(plotly)
#setup
library(sand)
library(igraph)
library(tidyverse)
library(blockmodels)
library("RColorBrewer")
library(foreign)
library(plotly)
##reading in the data
ego_data <- read.dta("egodyad.dta")
ego_data <- as_tibble(ego_data)
###exploring the data
##atlanta urban networks project is study number 3/Atlanta  Urban (studynum)
ego_data$studynum %>% unique
ego_data %>% group_by(studynum) %>% summarize(n())
#filtering so we just have the ATL urban network data
ego_data_atl <- ego_data %>% filter(studynum=="Atlanta Urban")
#how many unique individuals in the dataset?
test <- ego_data_atl$rid %>% unique
length(test) #228
ego_data_atl$ntype1 %>% unique
ego_data_atl$ntype2 %>% unique
## generate list of unique rid which represent nodes for which data was collected (n=228)
unique_rid <- ego_data_atl$rid %>% unique
# filter data set by the combinations of id1 and id2 that are also in rid (did not
#collect data for every individual recruited)
ego_final <- ego_data_atl %>% filter(id1 %in% unique_rid & id2 %in% unique_rid)
## generate edge list without duplicates
edgelist <- unique(ego_final[,c("id1", "id2")]) #678 unique edges
id1total <- edgelist$id1 %>% unique
length(id1total) #184
id2total <- edgelist$id2 %>% unique
length(id2total) #226 (some overlap with id1, others are unique)
## generate vertext list of all unique ids
id1_v <- ego_final$id1 %>% unique
id1_v <- as_tibble(id1_v) #228
colnames(id1_v) <- "id"
id2_v <- ego_final$id2 %>% unique
id2_v <- as_tibble(id2_v)
colnames(id2_v) <- "id"
vertex_list <- merge(id1_v, id2_v, all.x=TRUE, all.y=TRUE)
vertex_list <- as_tibble(vertex_list) #228 nodes as expected
##making the igraph object
g_hiv <- graph.data.frame(edgelist,directed="FALSE",vertices=vertex_list)
g_hiv$name <- "Atlanta Urban Network"
##plotting the network - interested in looking at edges based on mode of
#connection (eg. social, drug, sexual, needle) between edges
set.seed(13)
help?
plot_ly
g_hiv_plotly <- plot_ly(g_hiv)
##making the igraph object
g_hiv <- graph.data.frame(edgelist,directed="FALSE",vertices=vertex_list)
g_hiv$name <- "Atlanta Urban Network"
g_hiv_plotly <- plot_ly(g_hiv)
typeof(g_hiv)
do.call(rbind.data.frame, g_hiv)
View(g_hiv)
View(g_hiv[:,1])
View(g_hiv[,1])
View(g_hiv[,2])
View(g_hiv[,3])
